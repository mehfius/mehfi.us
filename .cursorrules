/* Sempre utilize snake_case nas criações variavel. Use a função abaixo para quando for criar elementos: */

function jsonToObject(json){

  var field = document.createElement(json.tag);
        
  Object.entries(json).forEach(([key, value]) => {
    
    switch (key) {
    case 'innerhtml':field.innerHTML=json.innerhtml;break;
    case 'tag':break;        
    case 'textnode':field.appendChild(document.createTextNode(json.textnode));break; 
    case 'pattern':field.setAttribute(key,value);break;  
    case 'value':
      if (json.tag === 'textarea') {
        field.appendChild(document.createTextNode(json.value));
      } else {
        field.setAttribute("value",json.value);
      }
      break;
    case 'onclick':field.onclick = value;break;
    case 'onchange':field.onchange = value;break;    
    case 'onkeyup':field.onkeyup = value;break; 
    case 'onkeypress':field.onkeypress = value;break;           
    default:field.setAttribute(key,value);}  
    
  })
  
  return field;
 
}

// Se tiver criação de elemento opt_check use a funcao abaixo:

let options = [
    { value: 1, label: "Opção 1" },
    { value: 2, label: "Opção 2" },
    { value: 3, label: "Opção 3" }
];

let value = "[1,3]";
let e = document.getElementById("optionsContainer");

createOptCheck(options, value, e);

/* Inicie e termine o arquivo .js com: */

(async function (){  })();

/* Use esse padrao de consturcao de elementos e concatenacao de elementos */

(async function (){ 

  const prontuarios_form = JSON.parse(sessionStorage.prontuarios_form);

  let value = prontuarios_form.cnpj || ''

  let e_div = jsonToObject({ 
      tag: 'div',
      id: 'divlabel',
      grid: '3',
      gridmobile: '1'
  });

  let e_label = jsonToObject({
      tag: 'label',
      innerhtml: 'CNPJ'
  });

  let e_input = jsonToObject({ 
      tag: 'input',
      autocomplete: 'cnpj',
      id: 'cnpj',
      class: 'default',
      type: 'text',       
      required: 'true',
      placeholder: 'XX.XXX.XXX/XXXX-XX',
      value: value
  });

  let e_error = jsonToObject({
      tag: 'error'
  });

  e_div.append(e_label, e_input, e_error);
 
  document.querySelector('window > form').append(e_div);

})();